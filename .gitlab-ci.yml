stages:
  - prepare
  - build

.docker_template: &docker_definition
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

prepare-env:
  stage: prepare
  script:
    - chmod +x generate_env_from_template.sh
    - ./generate_env_from_template.sh

build-server:
  <<: *docker_definition
  stage: build
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE/server:$CI_COMMIT_REF_SLUG
  script:
    - cd server
    - docker build --pull -t "$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE/server:latest"
        docker push "$CI_REGISTRY_IMAGE/server:latest"
      fi

build-client:
  <<: *docker_definition
  stage: build
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE/client:$CI_COMMIT_REF_SLUG
  script:
    - cd client
    - docker build --pull -t "$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE/client:latest"
        docker push "$CI_REGISTRY_IMAGE/client:latest"
      fi

build-worker:
  <<: *docker_definition
  stage: build
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE/worker:$CI_COMMIT_REF_SLUG
  script:
    - cd worker
    - docker build --pull -t "$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE/worker:latest"
        docker push "$CI_REGISTRY_IMAGE/worker:latest"
      fi
